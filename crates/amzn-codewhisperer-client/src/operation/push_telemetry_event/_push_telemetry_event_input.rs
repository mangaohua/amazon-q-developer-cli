// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PushTelemetryEventInput {
    #[allow(missing_docs)] // documentation missing in model
    pub client_token: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    pub event_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub event: ::std::option::Option<::aws_smithy_types::Document>,
}
impl PushTelemetryEventInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn event_id(&self) -> ::std::option::Option<&str> {
        self.event_id.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn event(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.event.as_ref()
    }
}
impl PushTelemetryEventInput {
    /// Creates a new builder-style object to manufacture
    /// [`PushTelemetryEventInput`](crate::operation::push_telemetry_event::PushTelemetryEventInput).
    pub fn builder() -> crate::operation::push_telemetry_event::builders::PushTelemetryEventInputBuilder {
        crate::operation::push_telemetry_event::builders::PushTelemetryEventInputBuilder::default()
    }
}

/// A builder for
/// [`PushTelemetryEventInput`](crate::operation::push_telemetry_event::PushTelemetryEventInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PushTelemetryEventInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) event_id: ::std::option::Option<::std::string::String>,
    pub(crate) event: ::std::option::Option<::aws_smithy_types::Document>,
}
impl PushTelemetryEventInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }

    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.timestamp = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.timestamp
    }

    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn event_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_id = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_event_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_id = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_event_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_id
    }

    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn event(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.event = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_event(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.event = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_event(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.event
    }

    /// Consumes the builder and constructs a
    /// [`PushTelemetryEventInput`](crate::operation::push_telemetry_event::PushTelemetryEventInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::push_telemetry_event::PushTelemetryEventInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::push_telemetry_event::PushTelemetryEventInput {
            client_token: self.client_token,
            timestamp: self.timestamp,
            event_id: self.event_id,
            event: self.event,
        })
    }
}
