// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CodeFixUploadContext {
    /// Code fix name
    pub code_fix_name: ::std::string::String,
}
impl CodeFixUploadContext {
    /// Code fix name
    pub fn code_fix_name(&self) -> &str {
        use std::ops::Deref;
        self.code_fix_name.deref()
    }
}
impl CodeFixUploadContext {
    /// Creates a new builder-style object to manufacture
    /// [`CodeFixUploadContext`](crate::types::CodeFixUploadContext).
    pub fn builder() -> crate::types::builders::CodeFixUploadContextBuilder {
        crate::types::builders::CodeFixUploadContextBuilder::default()
    }
}

/// A builder for [`CodeFixUploadContext`](crate::types::CodeFixUploadContext).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CodeFixUploadContextBuilder {
    pub(crate) code_fix_name: ::std::option::Option<::std::string::String>,
}
impl CodeFixUploadContextBuilder {
    /// Code fix name
    /// This field is required.
    pub fn code_fix_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code_fix_name = ::std::option::Option::Some(input.into());
        self
    }

    /// Code fix name
    pub fn set_code_fix_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code_fix_name = input;
        self
    }

    /// Code fix name
    pub fn get_code_fix_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.code_fix_name
    }

    /// Consumes the builder and constructs a
    /// [`CodeFixUploadContext`](crate::types::CodeFixUploadContext). This method will fail if
    /// any of the following fields are not set:
    /// - [`code_fix_name`](crate::types::builders::CodeFixUploadContextBuilder::code_fix_name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::CodeFixUploadContext, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::types::CodeFixUploadContext {
            code_fix_name: self.code_fix_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "code_fix_name",
                    "code_fix_name was not specified but it is required when building CodeFixUploadContext",
                )
            })?,
        })
    }
}
