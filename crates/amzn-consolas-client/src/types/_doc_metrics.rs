// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DocMetrics {
    #[allow(missing_docs)] // documentation missing in model
    pub accepted_number_of_add_files: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub total_number_of_add_files: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub accepted_number_of_update_files: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub total_number_of_update_files: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub accepted_number_of_add_lines: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub total_number_of_add_lines: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub accepted_number_of_update_lines: ::std::option::Option<i64>,
    #[allow(missing_docs)] // documentation missing in model
    pub total_number_of_update_lines: ::std::option::Option<i64>,
}
impl DocMetrics {
    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_add_files(&self) -> ::std::option::Option<i64> {
        self.accepted_number_of_add_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_add_files(&self) -> ::std::option::Option<i64> {
        self.total_number_of_add_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_update_files(&self) -> ::std::option::Option<i64> {
        self.accepted_number_of_update_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_update_files(&self) -> ::std::option::Option<i64> {
        self.total_number_of_update_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_add_lines(&self) -> ::std::option::Option<i64> {
        self.accepted_number_of_add_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_add_lines(&self) -> ::std::option::Option<i64> {
        self.total_number_of_add_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_update_lines(&self) -> ::std::option::Option<i64> {
        self.accepted_number_of_update_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_update_lines(&self) -> ::std::option::Option<i64> {
        self.total_number_of_update_lines
    }
}
impl DocMetrics {
    /// Creates a new builder-style object to manufacture [`DocMetrics`](crate::types::DocMetrics).
    pub fn builder() -> crate::types::builders::DocMetricsBuilder {
        crate::types::builders::DocMetricsBuilder::default()
    }
}

/// A builder for [`DocMetrics`](crate::types::DocMetrics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DocMetricsBuilder {
    pub(crate) accepted_number_of_add_files: ::std::option::Option<i64>,
    pub(crate) total_number_of_add_files: ::std::option::Option<i64>,
    pub(crate) accepted_number_of_update_files: ::std::option::Option<i64>,
    pub(crate) total_number_of_update_files: ::std::option::Option<i64>,
    pub(crate) accepted_number_of_add_lines: ::std::option::Option<i64>,
    pub(crate) total_number_of_add_lines: ::std::option::Option<i64>,
    pub(crate) accepted_number_of_update_lines: ::std::option::Option<i64>,
    pub(crate) total_number_of_update_lines: ::std::option::Option<i64>,
}
impl DocMetricsBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_add_files(mut self, input: i64) -> Self {
        self.accepted_number_of_add_files = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_accepted_number_of_add_files(mut self, input: ::std::option::Option<i64>) -> Self {
        self.accepted_number_of_add_files = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_accepted_number_of_add_files(&self) -> &::std::option::Option<i64> {
        &self.accepted_number_of_add_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_add_files(mut self, input: i64) -> Self {
        self.total_number_of_add_files = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_total_number_of_add_files(mut self, input: ::std::option::Option<i64>) -> Self {
        self.total_number_of_add_files = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_total_number_of_add_files(&self) -> &::std::option::Option<i64> {
        &self.total_number_of_add_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_update_files(mut self, input: i64) -> Self {
        self.accepted_number_of_update_files = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_accepted_number_of_update_files(mut self, input: ::std::option::Option<i64>) -> Self {
        self.accepted_number_of_update_files = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_accepted_number_of_update_files(&self) -> &::std::option::Option<i64> {
        &self.accepted_number_of_update_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_update_files(mut self, input: i64) -> Self {
        self.total_number_of_update_files = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_total_number_of_update_files(mut self, input: ::std::option::Option<i64>) -> Self {
        self.total_number_of_update_files = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_total_number_of_update_files(&self) -> &::std::option::Option<i64> {
        &self.total_number_of_update_files
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_add_lines(mut self, input: i64) -> Self {
        self.accepted_number_of_add_lines = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_accepted_number_of_add_lines(mut self, input: ::std::option::Option<i64>) -> Self {
        self.accepted_number_of_add_lines = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_accepted_number_of_add_lines(&self) -> &::std::option::Option<i64> {
        &self.accepted_number_of_add_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_add_lines(mut self, input: i64) -> Self {
        self.total_number_of_add_lines = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_total_number_of_add_lines(mut self, input: ::std::option::Option<i64>) -> Self {
        self.total_number_of_add_lines = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_total_number_of_add_lines(&self) -> &::std::option::Option<i64> {
        &self.total_number_of_add_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn accepted_number_of_update_lines(mut self, input: i64) -> Self {
        self.accepted_number_of_update_lines = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_accepted_number_of_update_lines(mut self, input: ::std::option::Option<i64>) -> Self {
        self.accepted_number_of_update_lines = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_accepted_number_of_update_lines(&self) -> &::std::option::Option<i64> {
        &self.accepted_number_of_update_lines
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn total_number_of_update_lines(mut self, input: i64) -> Self {
        self.total_number_of_update_lines = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_total_number_of_update_lines(mut self, input: ::std::option::Option<i64>) -> Self {
        self.total_number_of_update_lines = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_total_number_of_update_lines(&self) -> &::std::option::Option<i64> {
        &self.total_number_of_update_lines
    }

    /// Consumes the builder and constructs a [`DocMetrics`](crate::types::DocMetrics).
    pub fn build(self) -> crate::types::DocMetrics {
        crate::types::DocMetrics {
            accepted_number_of_add_files: self.accepted_number_of_add_files,
            total_number_of_add_files: self.total_number_of_add_files,
            accepted_number_of_update_files: self.accepted_number_of_update_files,
            total_number_of_update_files: self.total_number_of_update_files,
            accepted_number_of_add_lines: self.accepted_number_of_add_lines,
            total_number_of_add_lines: self.total_number_of_add_lines,
            accepted_number_of_update_lines: self.accepted_number_of_update_lines,
            total_number_of_update_lines: self.total_number_of_update_lines,
        }
    }
}
