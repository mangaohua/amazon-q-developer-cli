// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EvaluationMetrics {
    #[allow(missing_docs)] // documentation missing in model
    pub composite_score: i32,
}
impl EvaluationMetrics {
    #[allow(missing_docs)] // documentation missing in model
    pub fn composite_score(&self) -> i32 {
        self.composite_score
    }
}
impl EvaluationMetrics {
    /// Creates a new builder-style object to manufacture
    /// [`EvaluationMetrics`](crate::types::EvaluationMetrics).
    pub fn builder() -> crate::types::builders::EvaluationMetricsBuilder {
        crate::types::builders::EvaluationMetricsBuilder::default()
    }
}

/// A builder for [`EvaluationMetrics`](crate::types::EvaluationMetrics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EvaluationMetricsBuilder {
    pub(crate) composite_score: ::std::option::Option<i32>,
}
impl EvaluationMetricsBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn composite_score(mut self, input: i32) -> Self {
        self.composite_score = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_composite_score(mut self, input: ::std::option::Option<i32>) -> Self {
        self.composite_score = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_composite_score(&self) -> &::std::option::Option<i32> {
        &self.composite_score
    }

    /// Consumes the builder and constructs a
    /// [`EvaluationMetrics`](crate::types::EvaluationMetrics). This method will fail if any of
    /// the following fields are not set:
    /// - [`composite_score`](crate::types::builders::EvaluationMetricsBuilder::composite_score)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::EvaluationMetrics, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EvaluationMetrics {
            composite_score: self.composite_score.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "composite_score",
                    "composite_score was not specified but it is required when building EvaluationMetrics",
                )
            })?,
        })
    }
}
