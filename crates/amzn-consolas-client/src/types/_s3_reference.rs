// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3Reference {
    #[allow(missing_docs)] // documentation missing in model
    pub uri: ::std::string::String,
}
impl S3Reference {
    #[allow(missing_docs)] // documentation missing in model
    pub fn uri(&self) -> &str {
        use std::ops::Deref;
        self.uri.deref()
    }
}
impl S3Reference {
    /// Creates a new builder-style object to manufacture
    /// [`S3Reference`](crate::types::S3Reference).
    pub fn builder() -> crate::types::builders::S3ReferenceBuilder {
        crate::types::builders::S3ReferenceBuilder::default()
    }
}

/// A builder for [`S3Reference`](crate::types::S3Reference).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct S3ReferenceBuilder {
    pub(crate) uri: ::std::option::Option<::std::string::String>,
}
impl S3ReferenceBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.uri = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.uri = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.uri
    }

    /// Consumes the builder and constructs a [`S3Reference`](crate::types::S3Reference).
    /// This method will fail if any of the following fields are not set:
    /// - [`uri`](crate::types::builders::S3ReferenceBuilder::uri)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::S3Reference, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::S3Reference {
            uri: self.uri.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "uri",
                    "uri was not specified but it is required when building S3Reference",
                )
            })?,
        })
    }
}
