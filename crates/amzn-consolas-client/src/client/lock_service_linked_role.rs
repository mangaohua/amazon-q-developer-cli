// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the
    /// [`LockServiceLinkedRole`](crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder)
    /// operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`role_arn(impl Into<String>)`](crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder::set_role_arn):<br>required: **true**<br>(undocumented)<br>
    ///   - [`timeout(i64)`](crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder::timeout) / [`set_timeout(Option<i64>)`](crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder::set_timeout):<br>required: **true**<br>(undocumented)<br>
    /// - On success, responds with
    ///   [`LockServiceLinkedRoleOutput`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleOutput)
    ///   with field(s):
    ///   - [`can_be_deleted(bool)`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleOutput::can_be_deleted): (undocumented)
    ///   - [`reason_of_failure(Option<String>)`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleOutput::reason_of_failure): (undocumented)
    ///   - [`related_resources(Option<Vec::<String>>)`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleOutput::related_resources): (undocumented)
    /// - On failure, responds with
    ///   [`SdkError<LockServiceLinkedRoleError>`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleError)
    pub fn lock_service_linked_role(
        &self,
    ) -> crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder {
        crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
