// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_customization_permissions_output_output_next_token(
    input: &crate::operation::list_customization_permissions::ListCustomizationPermissionsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_customization_versions_output_output_next_token(
    input: &crate::operation::list_customization_versions::ListCustomizationVersionsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_customizations_output_output_next_token(
    input: &crate::operation::list_customizations::ListCustomizationsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_profiles_output_output_next_token(
    input: &crate::operation::list_profiles::ListProfilesOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_customization_permissions_output_output_permissions(
    input: crate::operation::list_customization_permissions::ListCustomizationPermissionsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::CustomizationPermission>> {
    let input = input.permissions;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_customization_versions_output_output_versions(
    input: crate::operation::list_customization_versions::ListCustomizationVersionsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::CustomizationVersionSummary>> {
    let input = input.versions;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_customizations_output_output_customizations(
    input: crate::operation::list_customizations::ListCustomizationsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::CustomizationSummary>> {
    let input = input.customizations;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_profiles_output_output_profiles(
    input: crate::operation::list_profiles::ListProfilesOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::Profile>> {
    let input = input.profiles;
    ::std::option::Option::Some(input)
}
