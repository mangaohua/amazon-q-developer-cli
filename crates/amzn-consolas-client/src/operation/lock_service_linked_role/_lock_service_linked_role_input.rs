// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LockServiceLinkedRoleInput {
    #[allow(missing_docs)] // documentation missing in model
    pub role_arn: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub timeout: ::std::option::Option<i64>,
}
impl LockServiceLinkedRoleInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn timeout(&self) -> ::std::option::Option<i64> {
        self.timeout
    }
}
impl LockServiceLinkedRoleInput {
    /// Creates a new builder-style object to manufacture
    /// [`LockServiceLinkedRoleInput`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleInput).
    pub fn builder() -> crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleInputBuilder {
        crate::operation::lock_service_linked_role::builders::LockServiceLinkedRoleInputBuilder::default()
    }
}

/// A builder for
/// [`LockServiceLinkedRoleInput`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LockServiceLinkedRoleInputBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) timeout: ::std::option::Option<i64>,
}
impl LockServiceLinkedRoleInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }

    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn timeout(mut self, input: i64) -> Self {
        self.timeout = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_timeout(mut self, input: ::std::option::Option<i64>) -> Self {
        self.timeout = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_timeout(&self) -> &::std::option::Option<i64> {
        &self.timeout
    }

    /// Consumes the builder and constructs a
    /// [`LockServiceLinkedRoleInput`](crate::operation::lock_service_linked_role::LockServiceLinkedRoleInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::lock_service_linked_role::LockServiceLinkedRoleInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::lock_service_linked_role::LockServiceLinkedRoleInput {
            role_arn: self.role_arn,
            timeout: self.timeout,
        })
    }
}
