// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VendKeyGrantOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub cmk_arn: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub grant_id: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub grant_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl VendKeyGrantOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn cmk_arn(&self) -> ::std::option::Option<&str> {
        self.cmk_arn.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn grant_id(&self) -> ::std::option::Option<&str> {
        self.grant_id.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn grant_token(&self) -> ::std::option::Option<&str> {
        self.grant_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for VendKeyGrantOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl VendKeyGrantOutput {
    /// Creates a new builder-style object to manufacture
    /// [`VendKeyGrantOutput`](crate::operation::vend_key_grant::VendKeyGrantOutput).
    pub fn builder() -> crate::operation::vend_key_grant::builders::VendKeyGrantOutputBuilder {
        crate::operation::vend_key_grant::builders::VendKeyGrantOutputBuilder::default()
    }
}

/// A builder for [`VendKeyGrantOutput`](crate::operation::vend_key_grant::VendKeyGrantOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VendKeyGrantOutputBuilder {
    pub(crate) cmk_arn: ::std::option::Option<::std::string::String>,
    pub(crate) grant_id: ::std::option::Option<::std::string::String>,
    pub(crate) grant_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl VendKeyGrantOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn cmk_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cmk_arn = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_cmk_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cmk_arn = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_cmk_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cmk_arn
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn grant_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.grant_id = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_grant_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.grant_id = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_grant_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.grant_id
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn grant_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.grant_token = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_grant_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.grant_token = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_grant_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.grant_token
    }

    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }

    /// Consumes the builder and constructs a
    /// [`VendKeyGrantOutput`](crate::operation::vend_key_grant::VendKeyGrantOutput).
    pub fn build(self) -> crate::operation::vend_key_grant::VendKeyGrantOutput {
        crate::operation::vend_key_grant::VendKeyGrantOutput {
            cmk_arn: self.cmk_arn,
            grant_id: self.grant_id,
            grant_token: self.grant_token,
            _request_id: self._request_id,
        }
    }
}
