// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UnlockServiceLinkedRoleInput {
    #[allow(missing_docs)] // documentation missing in model
    pub role_arn: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub deletion_status: ::std::option::Option<crate::types::DeletionStatus>,
}
impl UnlockServiceLinkedRoleInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn deletion_status(&self) -> ::std::option::Option<&crate::types::DeletionStatus> {
        self.deletion_status.as_ref()
    }
}
impl UnlockServiceLinkedRoleInput {
    /// Creates a new builder-style object to manufacture
    /// [`UnlockServiceLinkedRoleInput`](crate::operation::unlock_service_linked_role::UnlockServiceLinkedRoleInput).
    pub fn builder() -> crate::operation::unlock_service_linked_role::builders::UnlockServiceLinkedRoleInputBuilder {
        crate::operation::unlock_service_linked_role::builders::UnlockServiceLinkedRoleInputBuilder::default()
    }
}

/// A builder for
/// [`UnlockServiceLinkedRoleInput`](crate::operation::unlock_service_linked_role::UnlockServiceLinkedRoleInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UnlockServiceLinkedRoleInputBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) deletion_status: ::std::option::Option<crate::types::DeletionStatus>,
}
impl UnlockServiceLinkedRoleInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn deletion_status(mut self, input: crate::types::DeletionStatus) -> Self {
        self.deletion_status = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_deletion_status(mut self, input: ::std::option::Option<crate::types::DeletionStatus>) -> Self {
        self.deletion_status = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_deletion_status(&self) -> &::std::option::Option<crate::types::DeletionStatus> {
        &self.deletion_status
    }

    /// Consumes the builder and constructs a
    /// [`UnlockServiceLinkedRoleInput`](crate::operation::unlock_service_linked_role::UnlockServiceLinkedRoleInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::unlock_service_linked_role::UnlockServiceLinkedRoleInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::unlock_service_linked_role::UnlockServiceLinkedRoleInput {
                role_arn: self.role_arn,
                deletion_status: self.deletion_status,
            },
        )
    }
}
