// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Structure representing different types of infrastructure updates.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InfrastructureUpdate {
    /// Structure describing a transition between two states in an infrastructure update.
    pub transition: ::std::option::Option<crate::types::InfrastructureUpdateTransition>,
}
impl InfrastructureUpdate {
    /// Structure describing a transition between two states in an infrastructure update.
    pub fn transition(&self) -> ::std::option::Option<&crate::types::InfrastructureUpdateTransition> {
        self.transition.as_ref()
    }
}
impl InfrastructureUpdate {
    /// Creates a new builder-style object to manufacture
    /// [`InfrastructureUpdate`](crate::types::InfrastructureUpdate).
    pub fn builder() -> crate::types::builders::InfrastructureUpdateBuilder {
        crate::types::builders::InfrastructureUpdateBuilder::default()
    }
}

/// A builder for [`InfrastructureUpdate`](crate::types::InfrastructureUpdate).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InfrastructureUpdateBuilder {
    pub(crate) transition: ::std::option::Option<crate::types::InfrastructureUpdateTransition>,
}
impl InfrastructureUpdateBuilder {
    /// Structure describing a transition between two states in an infrastructure update.
    pub fn transition(mut self, input: crate::types::InfrastructureUpdateTransition) -> Self {
        self.transition = ::std::option::Option::Some(input);
        self
    }

    /// Structure describing a transition between two states in an infrastructure update.
    pub fn set_transition(
        mut self,
        input: ::std::option::Option<crate::types::InfrastructureUpdateTransition>,
    ) -> Self {
        self.transition = input;
        self
    }

    /// Structure describing a transition between two states in an infrastructure update.
    pub fn get_transition(&self) -> &::std::option::Option<crate::types::InfrastructureUpdateTransition> {
        &self.transition
    }

    /// Consumes the builder and constructs a
    /// [`InfrastructureUpdate`](crate::types::InfrastructureUpdate).
    pub fn build(self) -> crate::types::InfrastructureUpdate {
        crate::types::InfrastructureUpdate {
            transition: self.transition,
        }
    }
}
