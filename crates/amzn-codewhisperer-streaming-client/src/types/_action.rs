// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Action {
    #[allow(missing_docs)] // documentation missing in model
    pub web_link: ::std::option::Option<crate::types::WebLink>,
    #[allow(missing_docs)] // documentation missing in model
    pub module_link: ::std::option::Option<crate::types::ModuleLink>,
}
impl Action {
    #[allow(missing_docs)] // documentation missing in model
    pub fn web_link(&self) -> ::std::option::Option<&crate::types::WebLink> {
        self.web_link.as_ref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn module_link(&self) -> ::std::option::Option<&crate::types::ModuleLink> {
        self.module_link.as_ref()
    }
}
impl Action {
    /// Creates a new builder-style object to manufacture [`Action`](crate::types::Action).
    pub fn builder() -> crate::types::builders::ActionBuilder {
        crate::types::builders::ActionBuilder::default()
    }
}

/// A builder for [`Action`](crate::types::Action).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ActionBuilder {
    pub(crate) web_link: ::std::option::Option<crate::types::WebLink>,
    pub(crate) module_link: ::std::option::Option<crate::types::ModuleLink>,
}
impl ActionBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn web_link(mut self, input: crate::types::WebLink) -> Self {
        self.web_link = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_web_link(mut self, input: ::std::option::Option<crate::types::WebLink>) -> Self {
        self.web_link = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_web_link(&self) -> &::std::option::Option<crate::types::WebLink> {
        &self.web_link
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn module_link(mut self, input: crate::types::ModuleLink) -> Self {
        self.module_link = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_module_link(mut self, input: ::std::option::Option<crate::types::ModuleLink>) -> Self {
        self.module_link = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_module_link(&self) -> &::std::option::Option<crate::types::ModuleLink> {
        &self.module_link
    }

    /// Consumes the builder and constructs a [`Action`](crate::types::Action).
    pub fn build(self) -> crate::types::Action {
        crate::types::Action {
            web_link: self.web_link,
            module_link: self.module_link,
        }
    }
}
