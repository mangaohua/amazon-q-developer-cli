// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateConnectorResourceInput {
    #[allow(missing_docs)] // documentation missing in model
    pub connector_id: ::std::option::Option<::std::string::String>,
    /// Resource associated to a connector, eg: IamRole
    pub resource: ::std::option::Option<crate::types::ConnectorResource>,
    #[allow(missing_docs)] // documentation missing in model
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl AssociateConnectorResourceInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn connector_id(&self) -> ::std::option::Option<&str> {
        self.connector_id.as_deref()
    }

    /// Resource associated to a connector, eg: IamRole
    pub fn resource(&self) -> ::std::option::Option<&crate::types::ConnectorResource> {
        self.resource.as_ref()
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl AssociateConnectorResourceInput {
    /// Creates a new builder-style object to manufacture
    /// [`AssociateConnectorResourceInput`](crate::operation::associate_connector_resource::AssociateConnectorResourceInput).
    pub fn builder() -> crate::operation::associate_connector_resource::builders::AssociateConnectorResourceInputBuilder
    {
        crate::operation::associate_connector_resource::builders::AssociateConnectorResourceInputBuilder::default()
    }
}

/// A builder for
/// [`AssociateConnectorResourceInput`](crate::operation::associate_connector_resource::AssociateConnectorResourceInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociateConnectorResourceInputBuilder {
    pub(crate) connector_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource: ::std::option::Option<crate::types::ConnectorResource>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl AssociateConnectorResourceInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn connector_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connector_id = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_connector_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connector_id = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_connector_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connector_id
    }

    /// Resource associated to a connector, eg: IamRole
    /// This field is required.
    pub fn resource(mut self, input: crate::types::ConnectorResource) -> Self {
        self.resource = ::std::option::Option::Some(input);
        self
    }

    /// Resource associated to a connector, eg: IamRole
    pub fn set_resource(mut self, input: ::std::option::Option<crate::types::ConnectorResource>) -> Self {
        self.resource = input;
        self
    }

    /// Resource associated to a connector, eg: IamRole
    pub fn get_resource(&self) -> &::std::option::Option<crate::types::ConnectorResource> {
        &self.resource
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }

    /// Consumes the builder and constructs a
    /// [`AssociateConnectorResourceInput`](crate::operation::associate_connector_resource::AssociateConnectorResourceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_connector_resource::AssociateConnectorResourceInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::associate_connector_resource::AssociateConnectorResourceInput {
                connector_id: self.connector_id,
                resource: self.resource,
                client_token: self.client_token,
            },
        )
    }
}
