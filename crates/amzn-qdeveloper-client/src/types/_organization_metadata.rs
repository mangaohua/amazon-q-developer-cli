// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OrganizationMetadata {
    #[allow(missing_docs)] // documentation missing in model
    pub sso_region_id: ::std::option::Option<::std::string::String>,
}
impl OrganizationMetadata {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sso_region_id(&self) -> ::std::option::Option<&str> {
        self.sso_region_id.as_deref()
    }
}
impl OrganizationMetadata {
    /// Creates a new builder-style object to manufacture
    /// [`OrganizationMetadata`](crate::types::OrganizationMetadata).
    pub fn builder() -> crate::types::builders::OrganizationMetadataBuilder {
        crate::types::builders::OrganizationMetadataBuilder::default()
    }
}

/// A builder for [`OrganizationMetadata`](crate::types::OrganizationMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OrganizationMetadataBuilder {
    pub(crate) sso_region_id: ::std::option::Option<::std::string::String>,
}
impl OrganizationMetadataBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sso_region_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sso_region_id = ::std::option::Option::Some(input.into());
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_sso_region_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sso_region_id = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_sso_region_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.sso_region_id
    }

    /// Consumes the builder and constructs a
    /// [`OrganizationMetadata`](crate::types::OrganizationMetadata).
    pub fn build(self) -> crate::types::OrganizationMetadata {
        crate::types::OrganizationMetadata {
            sso_region_id: self.sso_region_id,
        }
    }
}
