// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the
    /// [`CreatePlugin`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder)
    /// operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`plugin_provider(impl Into<String>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::plugin_provider) / [`set_plugin_provider(Option<String>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::set_plugin_provider):<br>required: **true**<br>(undocumented)<br>
    ///   - [`plugin_credential(PluginCredential)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::plugin_credential) / [`set_plugin_credential(Option<PluginCredential>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::set_plugin_credential):<br>required: **false**<br>(undocumented)<br>
    ///   - [`plugin_properties(impl Into<String>, impl
    ///     Into<String>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::plugin_properties)
    ///     / [`set_plugin_properties(Option<HashMap::<String,
    ///     String>>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::set_plugin_properties):
    ///     <br>required: **false**<br>(undocumented)<br>
    ///   - [`tags(Tag)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::set_tags):<br>required: **false**<br>(undocumented)<br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_plugin::builders::CreatePluginFluentBuilder::set_client_token):<br>required: **false**<br>(undocumented)<br>
    /// - On success, responds with
    ///   [`CreatePluginOutput`](crate::operation::create_plugin::CreatePluginOutput) with field(s):
    ///   - [`plugin_id(String)`](crate::operation::create_plugin::CreatePluginOutput::plugin_id):
    ///     (undocumented)
    /// - On failure, responds with
    ///   [`SdkError<CreatePluginError>`](crate::operation::create_plugin::CreatePluginError)
    pub fn create_plugin(&self) -> crate::operation::create_plugin::builders::CreatePluginFluentBuilder {
        crate::operation::create_plugin::builders::CreatePluginFluentBuilder::new(self.handle.clone())
    }
}
