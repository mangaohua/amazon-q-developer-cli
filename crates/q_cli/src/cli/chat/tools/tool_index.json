[
  {
    "name": "execute_bash",
    "description": "Execute the specified bash command",
    "input_schema": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "description": "Bash command to execute"
        }
      },
      "required": ["command"]
    }
  },
  {
    "name": "fs_read",
    "description": "A tool for viewing files and directories.\n* If `path` is a file, this tool displays the result of applying `cat -n`.\n* If `path` is a directory, this tool lists files and directories\n",
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "description": "Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`.",
          "type": "string"
        },
        "read_range": {
          "description": "Optional parameter when reading either files or directories.\n* When `path` is a file, if none is given, the full file is shown. If provided, the file will be shown in the indicated line number range, e.g. [11, 12] will show lines 11 and 12. Indexing at 1 to start. Setting `[start_line, -1]` shows all lines from `start_line` to the end of the file.\n* When `path` is a directory, if none is given, the results of `ls -l` are given. If provided, the current directory and indicated number of subdirectories will be shown, e.g. [2] will show the current directory and directories two levels deep.",
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": ["path"]
    }
  },
  {
    "name": "fs_write",
    "description": "Custom editing tool for creating and editing files\n * The `create` command cannot be used if the specified `path` already exists as a file\n * If a `command` generates a long output, it will be truncated and marked with `<response clipped>` \n Notes for using the `str_replace` command:\n * The `old_str` parameter should match EXACTLY one or more consecutive lines from the original file. Be mindful of whitespaces!\n * If the `old_str` parameter is not unique in the file, the replacement will not be performed. Make sure to include enough context in `old_str` to make it unique\n * The `new_str` parameter should contain the edited lines that should replace the `old_str`",
    "input_schema": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "enum": ["create", "str_replace", "insert"],
          "description": "The commands to run. Allowed options are: `create`, `str_replace`, `insert`."
        },
        "file_text": {
          "description": "Required parameter of `create` command, with the content of the file to be created.",
          "type": "string"
        },
        "insert_line": {
          "description": "Required parameter of `insert` command. The `new_str` will be inserted AFTER the line `insert_line` of `path`.",
          "type": "integer"
        },
        "new_str": {
          "description": "Required parameter of `str_replace` command containing the new string. Required parameter of `insert` command containing the string to insert.",
          "type": "string"
        },
        "old_str": {
          "description": "Required parameter of `str_replace` command containing the string in `path` to replace.",
          "type": "string"
        },
        "path": {
          "description": "Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`.",
          "type": "string"
        }
      },
      "required": ["command", "path"]
    }
  },
  {
    "name": "use_aws",
    "description": "Make an AWS api call with the specified service, operation, and parameters. You may not create resources or perform any write or mutating actions. You may only use this tool to call read operations with names that start with: get, describe, list, search, batch_get.",
    "input_schema": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the AWS service."
        },
        "operation_name": {
          "type": "string",
          "description": "The name of the operation to perform."
        },
        "parameters": {
          "type": "object",
          "description": "The parameters for the operation."
        },
        "region": {
          "type": "string",
          "description": "Region name for calling the operation on AWS."
        },
        "profile_name": {
          "type": "string",
          "description": "Optional: AWS profile name to use from ~/.aws/credentials. Defaults to default profile if not specified."
        },
        "label": {
          "type": "string",
          "description": "Human readable description of the api that is being called."
        }
      },
      "required": [
        "region",
        "service_name",
        "operation_name",
        "parameters",
        "label"
      ]
    }
  }
]
