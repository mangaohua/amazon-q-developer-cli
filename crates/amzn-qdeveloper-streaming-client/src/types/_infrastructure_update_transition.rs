// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Structure describing a transition between two states in an infrastructure update.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct InfrastructureUpdateTransition {
    /// The current state of the infrastructure before the update.
    pub current_state: ::std::string::String,
    /// The next state of the infrastructure following the update.
    pub next_state: ::std::string::String,
}
impl InfrastructureUpdateTransition {
    /// The current state of the infrastructure before the update.
    pub fn current_state(&self) -> &str {
        use std::ops::Deref;
        self.current_state.deref()
    }

    /// The next state of the infrastructure following the update.
    pub fn next_state(&self) -> &str {
        use std::ops::Deref;
        self.next_state.deref()
    }
}
impl ::std::fmt::Debug for InfrastructureUpdateTransition {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("InfrastructureUpdateTransition");
        formatter.field("current_state", &"*** Sensitive Data Redacted ***");
        formatter.field("next_state", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl InfrastructureUpdateTransition {
    /// Creates a new builder-style object to manufacture
    /// [`InfrastructureUpdateTransition`](crate::types::InfrastructureUpdateTransition).
    pub fn builder() -> crate::types::builders::InfrastructureUpdateTransitionBuilder {
        crate::types::builders::InfrastructureUpdateTransitionBuilder::default()
    }
}

/// A builder for [`InfrastructureUpdateTransition`](crate::types::InfrastructureUpdateTransition).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct InfrastructureUpdateTransitionBuilder {
    pub(crate) current_state: ::std::option::Option<::std::string::String>,
    pub(crate) next_state: ::std::option::Option<::std::string::String>,
}
impl InfrastructureUpdateTransitionBuilder {
    /// The current state of the infrastructure before the update.
    /// This field is required.
    pub fn current_state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.current_state = ::std::option::Option::Some(input.into());
        self
    }

    /// The current state of the infrastructure before the update.
    pub fn set_current_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.current_state = input;
        self
    }

    /// The current state of the infrastructure before the update.
    pub fn get_current_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.current_state
    }

    /// The next state of the infrastructure following the update.
    /// This field is required.
    pub fn next_state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_state = ::std::option::Option::Some(input.into());
        self
    }

    /// The next state of the infrastructure following the update.
    pub fn set_next_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_state = input;
        self
    }

    /// The next state of the infrastructure following the update.
    pub fn get_next_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_state
    }

    /// Consumes the builder and constructs a
    /// [`InfrastructureUpdateTransition`](crate::types::InfrastructureUpdateTransition).
    /// This method will fail if any of the following fields are not set:
    /// - [`current_state`](crate::types::builders::InfrastructureUpdateTransitionBuilder::current_state)
    /// - [`next_state`](crate::types::builders::InfrastructureUpdateTransitionBuilder::next_state)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::types::InfrastructureUpdateTransition,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::types::InfrastructureUpdateTransition {
            current_state: self.current_state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "current_state",
                    "current_state was not specified but it is required when building InfrastructureUpdateTransition",
                )
            })?,
            next_state: self.next_state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "next_state",
                    "next_state was not specified but it is required when building InfrastructureUpdateTransition",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for InfrastructureUpdateTransitionBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("InfrastructureUpdateTransitionBuilder");
        formatter.field("current_state", &"*** Sensitive Data Redacted ***");
        formatter.field("next_state", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
