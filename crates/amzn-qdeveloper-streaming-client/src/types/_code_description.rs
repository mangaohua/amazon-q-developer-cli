// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Structure to capture a description for an error code.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CodeDescription {
    /// An URI to open with more information about the diagnostic error.
    pub href: ::std::string::String,
}
impl CodeDescription {
    /// An URI to open with more information about the diagnostic error.
    pub fn href(&self) -> &str {
        use std::ops::Deref;
        self.href.deref()
    }
}
impl ::std::fmt::Debug for CodeDescription {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CodeDescription");
        formatter.field("href", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl CodeDescription {
    /// Creates a new builder-style object to manufacture
    /// [`CodeDescription`](crate::types::CodeDescription).
    pub fn builder() -> crate::types::builders::CodeDescriptionBuilder {
        crate::types::builders::CodeDescriptionBuilder::default()
    }
}

/// A builder for [`CodeDescription`](crate::types::CodeDescription).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CodeDescriptionBuilder {
    pub(crate) href: ::std::option::Option<::std::string::String>,
}
impl CodeDescriptionBuilder {
    /// An URI to open with more information about the diagnostic error.
    /// This field is required.
    pub fn href(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.href = ::std::option::Option::Some(input.into());
        self
    }

    /// An URI to open with more information about the diagnostic error.
    pub fn set_href(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.href = input;
        self
    }

    /// An URI to open with more information about the diagnostic error.
    pub fn get_href(&self) -> &::std::option::Option<::std::string::String> {
        &self.href
    }

    /// Consumes the builder and constructs a [`CodeDescription`](crate::types::CodeDescription).
    /// This method will fail if any of the following fields are not set:
    /// - [`href`](crate::types::builders::CodeDescriptionBuilder::href)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::CodeDescription, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CodeDescription {
            href: self.href.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "href",
                    "href was not specified but it is required when building CodeDescription",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for CodeDescriptionBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CodeDescriptionBuilder");
        formatter.field("href", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
