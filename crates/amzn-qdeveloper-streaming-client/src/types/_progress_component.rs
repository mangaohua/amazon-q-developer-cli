// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProgressComponent {
    /// Structure representing an individual step in a process.
    pub step: ::std::option::Option<crate::types::Step>,
}
impl ProgressComponent {
    /// Structure representing an individual step in a process.
    pub fn step(&self) -> ::std::option::Option<&crate::types::Step> {
        self.step.as_ref()
    }
}
impl ProgressComponent {
    /// Creates a new builder-style object to manufacture
    /// [`ProgressComponent`](crate::types::ProgressComponent).
    pub fn builder() -> crate::types::builders::ProgressComponentBuilder {
        crate::types::builders::ProgressComponentBuilder::default()
    }
}

/// A builder for [`ProgressComponent`](crate::types::ProgressComponent).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ProgressComponentBuilder {
    pub(crate) step: ::std::option::Option<crate::types::Step>,
}
impl ProgressComponentBuilder {
    /// Structure representing an individual step in a process.
    pub fn step(mut self, input: crate::types::Step) -> Self {
        self.step = ::std::option::Option::Some(input);
        self
    }

    /// Structure representing an individual step in a process.
    pub fn set_step(mut self, input: ::std::option::Option<crate::types::Step>) -> Self {
        self.step = input;
        self
    }

    /// Structure representing an individual step in a process.
    pub fn get_step(&self) -> &::std::option::Option<crate::types::Step> {
        &self.step
    }

    /// Consumes the builder and constructs a
    /// [`ProgressComponent`](crate::types::ProgressComponent).
    pub fn build(self) -> crate::types::ProgressComponent {
        crate::types::ProgressComponent { step: self.step }
    }
}
