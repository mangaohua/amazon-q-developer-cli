// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Streaming Event for interaction components list
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InteractionComponentsEvent {
    /// List of identifiable interaction components
    pub interaction_component_entries: ::std::vec::Vec<crate::types::InteractionComponentEntry>,
}
impl InteractionComponentsEvent {
    /// List of identifiable interaction components
    pub fn interaction_component_entries(&self) -> &[crate::types::InteractionComponentEntry] {
        use std::ops::Deref;
        self.interaction_component_entries.deref()
    }
}
impl InteractionComponentsEvent {
    /// Creates a new builder-style object to manufacture
    /// [`InteractionComponentsEvent`](crate::types::InteractionComponentsEvent).
    pub fn builder() -> crate::types::builders::InteractionComponentsEventBuilder {
        crate::types::builders::InteractionComponentsEventBuilder::default()
    }
}

/// A builder for [`InteractionComponentsEvent`](crate::types::InteractionComponentsEvent).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InteractionComponentsEventBuilder {
    pub(crate) interaction_component_entries:
        ::std::option::Option<::std::vec::Vec<crate::types::InteractionComponentEntry>>,
}
impl InteractionComponentsEventBuilder {
    /// Appends an item to `interaction_component_entries`.
    ///
    /// To override the contents of this collection use
    /// [`set_interaction_component_entries`](Self::set_interaction_component_entries).
    ///
    /// List of identifiable interaction components
    pub fn interaction_component_entries(mut self, input: crate::types::InteractionComponentEntry) -> Self {
        let mut v = self.interaction_component_entries.unwrap_or_default();
        v.push(input);
        self.interaction_component_entries = ::std::option::Option::Some(v);
        self
    }

    /// List of identifiable interaction components
    pub fn set_interaction_component_entries(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::InteractionComponentEntry>>,
    ) -> Self {
        self.interaction_component_entries = input;
        self
    }

    /// List of identifiable interaction components
    pub fn get_interaction_component_entries(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::InteractionComponentEntry>> {
        &self.interaction_component_entries
    }

    /// Consumes the builder and constructs a
    /// [`InteractionComponentsEvent`](crate::types::InteractionComponentsEvent). This method
    /// will fail if any of the following fields are not set:
    /// - [`interaction_component_entries`](crate::types::builders::InteractionComponentsEventBuilder::interaction_component_entries)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::InteractionComponentsEvent, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::types::InteractionComponentsEvent {
            interaction_component_entries: self.interaction_component_entries.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "interaction_component_entries",
                    "interaction_component_entries was not specified but it is required when building InteractionComponentsEvent",
                )
            })?,
        })
    }
}
