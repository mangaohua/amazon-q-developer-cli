// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the
    /// [`GenerateCodeFromCommands`](crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder)
    /// operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`output_format(OutputFormat)`](crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder::output_format) / [`set_output_format(Option<OutputFormat>)`](crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder::set_output_format):<br>required: **true**<br>Format of the output - language/format eg. typescript/cdk<br>
    ///   - [`commands(CommandInput)`](crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder::commands) / [`set_commands(Option<CommandInput>)`](crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder::set_commands):<br>required: **true**<br>CommandInput can be extended to either a list of strings or a single string.<br>
    /// - On success, responds with
    ///   [`GenerateCodeFromCommandsOutput`](crate::operation::generate_code_from_commands::GenerateCodeFromCommandsOutput)
    ///   with field(s):
    ///   - [`generated_code_from_commands_response(EventReceiver<GenerateCodeFromCommandsResponseStream, GenerateCodeFromCommandsResponseStreamError>)`](crate::operation::generate_code_from_commands::GenerateCodeFromCommandsOutput::generated_code_from_commands_response): Streaming events from UniDirectional streaming infrastructure code generation APIs.
    /// - On failure, responds with [`SdkError<GenerateCodeFromCommandsError>`](crate::operation::generate_code_from_commands::GenerateCodeFromCommandsError)
    pub fn generate_code_from_commands(
        &self,
    ) -> crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder {
        crate::operation::generate_code_from_commands::builders::GenerateCodeFromCommandsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
